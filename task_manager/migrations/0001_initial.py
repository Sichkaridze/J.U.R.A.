# Generated by Django 5.1.5 on 2025-02-05 15:53

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Position',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('start_date', models.DateField(blank=True, default=django.utils.timezone.now)),
                ('deadline', models.DateField(blank=True, null=True)),
                ('completion_date', models.DateField(blank=True, null=True)),
                ('is_completed_in_time', models.IntegerField(blank=True, choices=[(-1, 'Unknown'), (1, 'Yes'), (0, 'No')], default=None, null=True)),
                ('is_completed', models.BooleanField(default=False)),
                ('duration', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'ordering': ['-start_date'],
            },
        ),
        migrations.CreateModel(
            name='Responsibility',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField()),
            ],
            options={
                'verbose_name_plural': 'responsibilities',
            },
        ),
        migrations.CreateModel(
            name='TaskType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Worker',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('level', models.IntegerField(choices=[(0, 'Intern'), (1, 'Junior'), (2, 'Middle'), (3, 'Senior'), (4, 'Lead')], default=0)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
                ('position', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='task_manager.position')),
            ],
            options={
                'ordering': ['last_name'],
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='PositionResponsibility',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('position', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='task_manager.position')),
                ('responsibility', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='task_manager.responsibility')),
            ],
            options={
                'unique_together': {('position', 'responsibility')},
            },
        ),
        migrations.AddField(
            model_name='position',
            name='responsibilities',
            field=models.ManyToManyField(blank=True, related_name='positions', through='task_manager.PositionResponsibility', to='task_manager.responsibility'),
        ),
        migrations.CreateModel(
            name='SoloWorkerOnProject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='task_manager.project')),
                ('worker', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('project', 'worker')},
            },
        ),
        migrations.AddField(
            model_name='project',
            name='solo_members',
            field=models.ManyToManyField(blank=True, related_name='projects', through='task_manager.SoloWorkerOnProject', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('start_time', models.DateTimeField(blank=True, default=django.utils.timezone.now)),
                ('completion_time', models.DateTimeField(blank=True, null=True)),
                ('deadline', models.DateTimeField(blank=True, null=True)),
                ('is_completed', models.BooleanField(default=False)),
                ('is_completed_in_time', models.IntegerField(blank=True, choices=[(-1, 'Unknown'), (1, 'Yes'), (0, 'No')], default=None, null=True)),
                ('priority', models.IntegerField(choices=[(5, 'ðŸ”¥ Urgent'), (4, 'ðŸ”´ High'), (3, 'ðŸŸ¡ Medium'), (2, 'ðŸŸ¢ Normal'), (1, 'ðŸ”µ Low'), (0, 'âšª Optional')], default=2)),
                ('created_by', models.ForeignKey(default=1, on_delete=django.db.models.deletion.SET_DEFAULT, related_name='created_tasks', to=settings.AUTH_USER_MODEL)),
                ('project', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tasks', to='task_manager.project')),
                ('tasktype', models.ManyToManyField(related_name='tasktypes', to='task_manager.tasktype')),
            ],
            options={
                'ordering': ['-priority', 'deadline'],
            },
        ),
        migrations.CreateModel(
            name='TeamOnProject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='task_manager.project')),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='task_manager.team')),
            ],
            options={
                'unique_together': {('project', 'team')},
            },
        ),
        migrations.AddField(
            model_name='project',
            name='teams',
            field=models.ManyToManyField(blank=True, related_name='projects', through='task_manager.TeamOnProject', to='task_manager.team'),
        ),
        migrations.CreateModel(
            name='TeamWorker',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='task_manager.team')),
                ('worker', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('team', 'worker')},
            },
        ),
        migrations.AddField(
            model_name='team',
            name='members',
            field=models.ManyToManyField(related_name='teams', through='task_manager.TeamWorker', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='WorkerTask',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='task_manager.task')),
                ('worker', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('task', 'worker')},
            },
        ),
        migrations.AddField(
            model_name='task',
            name='workers',
            field=models.ManyToManyField(related_name='tasks', through='task_manager.WorkerTask', to=settings.AUTH_USER_MODEL),
        ),
    ]
